// Generated by view binder compiler. Do not edit!
package com.example.tariindonesia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tariindonesia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutSpecificationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final TextView textBattery;

  @NonNull
  public final TextView textBatteryTitle;

  @NonNull
  public final TextView textSpecDisplay;

  @NonNull
  public final TextView textSpecDisplayTitle;

  @NonNull
  public final TextView textSpecSize;

  @NonNull
  public final TextView textSpecSizeTitle;

  @NonNull
  public final TextView textSpecification;

  private LayoutSpecificationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guideline, @NonNull TextView textBattery,
      @NonNull TextView textBatteryTitle, @NonNull TextView textSpecDisplay,
      @NonNull TextView textSpecDisplayTitle, @NonNull TextView textSpecSize,
      @NonNull TextView textSpecSizeTitle, @NonNull TextView textSpecification) {
    this.rootView = rootView;
    this.guideline = guideline;
    this.textBattery = textBattery;
    this.textBatteryTitle = textBatteryTitle;
    this.textSpecDisplay = textSpecDisplay;
    this.textSpecDisplayTitle = textSpecDisplayTitle;
    this.textSpecSize = textSpecSize;
    this.textSpecSizeTitle = textSpecSizeTitle;
    this.textSpecification = textSpecification;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutSpecificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutSpecificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_specification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutSpecificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.text_battery;
      TextView textBattery = ViewBindings.findChildViewById(rootView, id);
      if (textBattery == null) {
        break missingId;
      }

      id = R.id.text_battery_title;
      TextView textBatteryTitle = ViewBindings.findChildViewById(rootView, id);
      if (textBatteryTitle == null) {
        break missingId;
      }

      id = R.id.text_spec_display;
      TextView textSpecDisplay = ViewBindings.findChildViewById(rootView, id);
      if (textSpecDisplay == null) {
        break missingId;
      }

      id = R.id.text_spec_display_title;
      TextView textSpecDisplayTitle = ViewBindings.findChildViewById(rootView, id);
      if (textSpecDisplayTitle == null) {
        break missingId;
      }

      id = R.id.text_spec_size;
      TextView textSpecSize = ViewBindings.findChildViewById(rootView, id);
      if (textSpecSize == null) {
        break missingId;
      }

      id = R.id.text_spec_size_title;
      TextView textSpecSizeTitle = ViewBindings.findChildViewById(rootView, id);
      if (textSpecSizeTitle == null) {
        break missingId;
      }

      id = R.id.text_specification;
      TextView textSpecification = ViewBindings.findChildViewById(rootView, id);
      if (textSpecification == null) {
        break missingId;
      }

      return new LayoutSpecificationBinding((ConstraintLayout) rootView, guideline, textBattery,
          textBatteryTitle, textSpecDisplay, textSpecDisplayTitle, textSpecSize, textSpecSizeTitle,
          textSpecification);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
